AWSTemplateFormatVersion: '2010-09-09'
Parameters:
  ClientId:
    Type: String
  DynamoDbTableArn:
    Type: String
Resources:
  IdentityPool:
    Type: AWS::Cognito::IdentityPool
    Properties:
      AllowUnauthenticatedIdentities: false
      IdentityPoolName: "learnjs"
      SupportedLoginProviders:
        "accounts.google.com": !Ref ClientId
  IdentityPoolRoleAttachment:
    Type: AWS::Cognito::IdentityPoolRoleAttachment
    Properties:
      IdentityPoolId: !Ref IdentityPool
      Roles:
        authenticated: !GetAtt CognitoAuthRole.Arn
  CognitoAuthRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Federated: "cognito-identity.amazonaws.com"
            Action: "sts:AssumeRoleWithWebIdentity"
            Condition:
              StringEquals:
                "cognito-identity.amazonaws.com:aud": !Ref IdentityPool
              "ForAnyValue:StringLike":
                "cognito-identity.amazonaws.com:amr": "authenticated"
      Policies:
        - PolicyName: "learnjs_table_access"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "dynamodb:BatchGetItem"
                  - "dynamodb:BatchWriteItem"
                  - "dynamodb:DeleteItem"
                  - "dynamodb:GetItem"
                  - "dynamodb:PutItem"
                  - "dynamodb:Query"
                  - "dynamodb:UpdateItem"
                Resource:
                  - !Ref DynamoDbTableArn
                Condition:
                  ForAllValues:StringEquals:
                    "dynamodb:LeadingKeys":
                      - "${cognito-identity.amazonaws.com:sub}"
      RoleName: !Join [ '_', [ !GetAtt IdentityPool.Name, 'cognito', 'authenticated' ] ]
Outputs:
  IdentityPoolId:
    Value: !Ref IdentityPool
    Description: Id of the Identity Pool
